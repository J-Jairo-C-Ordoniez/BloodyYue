-- Tabla: roles
CREATE TABLE roles (
  rolId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(50) UNIQUE,
  description TEXT,
  permissions TEXT,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabla: users
CREATE TABLE users (
  userId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50),
  email VARCHAR(50) UNIQUE,
  password VARCHAR(255),
  avatar VARCHAR(255),
  pitchVideo VARCHAR(255),
  biography TEXT,
  details TEXT,
  rolId INT UNSIGNED,
  country VARCHAR(255),
  isVerified BOOLEAN DEFAULT false,
  codeExpiresAt TIMESTAMP,
  code VARCHAR(255),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  INDEX iUsers (name, email),
  FOREIGN KEY (rolId) REFERENCES roles(rolId)
);

-- Tabla: socialLinks
CREATE TABLE socialLinks (
  socialLinksId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(50) UNIQUE,
  icon VARCHAR(255),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabla: socialXUser
CREATE TABLE socialXUser (
  sxuId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  userId INT UNSIGNED,
  socialLinksId INT UNSIGNED,
  socialUrl VARCHAR(255),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES users(userId),
  FOREIGN KEY (socialLinksId) REFERENCES socialLinks(socialLinksId)
);

-- Tabla: commissions
CREATE TABLE commissions (
  commissionId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(100) UNIQUE,
  details TEXT,
  exampleId INT UNSIGNED,
  price DECIMAL(10, 2),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (exampleId) REFERENCES posts(postId)
);

-- Tabla: typePost
CREATE TABLE typePost (
  typePostId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(50) UNIQUE,
  description TEXT,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabla: posts
CREATE TABLE posts (
  postId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  userId INT UNSIGNED,
  title VARCHAR(100),
  description TEXT,
  contentUrl VARCHAR(255),
  postTypeId INT UNSIGNED,
  commissionId INT UNSIGNED,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES users(userId),
  FOREIGN KEY (postTypeId) REFERENCES typePost(typePostId),
  FOREIGN KEY (commissionId) REFERENCES commissions(commissionId),
);

-- Tabla: labels
CREATE TABLE labels (
  labelId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(50),
  color VARCHAR(20),
  icon VARCHAR(255),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabla: labelsXPost
CREATE TABLE labelsXPost (
  lxpId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  postId INT UNSIGNED,
  labelId INT UNSIGNED,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (postId) REFERENCES posts(postId),
  FOREIGN KEY (labelId) REFERENCES labels(labelId)
);

-- Tabla: postReactions
CREATE TABLE postReactions (
  reactionId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  postId INT UNSIGNED,
  userId INT UNSIGNED,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (postId) REFERENCES posts(postId),
  FOREIGN KEY (userId) REFERENCES users(userId)
);

CREATE TABLE postFavorites (
    id INT AUTO_INCREMENT PRIMARY KEY,
    userId INT NOT NULL,
    postId INT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES users(id),
    FOREIGN KEY (postId) REFERENCES posts(id),
    UNIQUE (userId, postId)
);

-- Tabla: paymentMethods
CREATE TABLE paymentMethods (
  paymentMethodId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(50),
  description TEXT,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


-- Tabla: sales
CREATE TABLE sales (
  saleId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  userId INT UNSIGNED,
  buyerId INT UNSIGNED,
  commissionId INT UNSIGNED,
  details VARCHAR(255),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES users(userId),
  FOREIGN KEY (buyerId) REFERENCES users(userId),
  FOREIGN KEY (commissionId) REFERENCES commissions(commissionId)
);

-- Tabla: detailsSale
CREATE TABLE detailsSale (
  detailsSaleId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  saleId INT UNSIGNED,
  amount INT,
  total DECIMAL(10,2),
  isCompleted BOOLEAN,
  paymentMethod INT UNSIGNED,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (saleId) REFERENCES sales(saleId),
  FOREIGN KEY (paymentMethod) REFERENCES paymentMethods(paymentMethodId)
);
 
-- Tabla: messages
CREATE TABLE messages (
  messageId INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  saleId INT UNSIGNED,
  senderId INT UNSIGNED,
  message TEXT,
  isRead BOOLEAN DEFAULT false,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (saleId) REFERENCES sales(saleId),
  FOREIGN KEY (senderId) REFERENCES users(userId)
);

CREATE TABLE notifications (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT NOT NULL,
  type ENUM('reaction', 'sale', 'menssage', 'post') NOT NULL,
  postId INT NULL,
  message VARCHAR(255) NOT NULL,
  isRead BOOLEAN DEFAULT FALSE,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES users(id),
  FOREIGN KEY (postId) REFERENCES posts(id)
);